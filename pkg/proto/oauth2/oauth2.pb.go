// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v4.22.2
// source: oauth/oauth.proto

package oauth2

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthorizeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
}

func (x *AuthorizeReq) Reset() {
	*x = AuthorizeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oauth2_oauth2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeReq) ProtoMessage() {}

func (x *AuthorizeReq) ProtoReflect() protoreflect.Message {
	mi := &file_oauth2_oauth2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeReq.ProtoReflect.Descriptor instead.
func (*AuthorizeReq) Descriptor() ([]byte, []int) {
	return file_oauth2_oauth2_proto_rawDescGZIP(), []int{0}
}

func (x *AuthorizeReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type AuthorizeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
}

func (x *AuthorizeResp) Reset() {
	*x = AuthorizeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oauth2_oauth2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeResp) ProtoMessage() {}

func (x *AuthorizeResp) ProtoReflect() protoreflect.Message {
	mi := &file_oauth2_oauth2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeResp.ProtoReflect.Descriptor instead.
func (*AuthorizeResp) Descriptor() ([]byte, []int) {
	return file_oauth2_oauth2_proto_rawDescGZIP(), []int{1}
}

func (x *AuthorizeResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type TokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
}

func (x *TokenReq) Reset() {
	*x = TokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oauth2_oauth2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenReq) ProtoMessage() {}

func (x *TokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_oauth2_oauth2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenReq.ProtoReflect.Descriptor instead.
func (*TokenReq) Descriptor() ([]byte, []int) {
	return file_oauth2_oauth2_proto_rawDescGZIP(), []int{2}
}

func (x *TokenReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type TokenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID            string                 `protobuf:"bytes,1,opt,name=clientID,proto3" json:"clientID"`
	UserID              string                 `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID"`
	RedirectURI         string                 `protobuf:"bytes,3,opt,name=redirectURI,proto3" json:"redirectURI"`
	Scope               string                 `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope"`
	Code                string                 `protobuf:"bytes,5,opt,name=code,proto3" json:"code"`
	CodeChallenge       string                 `protobuf:"bytes,6,opt,name=codeChallenge,proto3" json:"codeChallenge"`
	CodeChallengeMethod string                 `protobuf:"bytes,7,opt,name=codeChallengeMethod,proto3" json:"codeChallengeMethod"`
	CodeCreateAt        *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=codeCreateAt,proto3" json:"codeCreateAt"`
	CodeExpiresIn       int64                  `protobuf:"varint,9,opt,name=codeExpiresIn,proto3" json:"codeExpiresIn"`
	Access              string                 `protobuf:"bytes,10,opt,name=access,proto3" json:"access"`
	AccessCreateAt      *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=accessCreateAt,proto3" json:"accessCreateAt"`
	AccessExpiresIn     int64                  `protobuf:"varint,12,opt,name=accessExpiresIn,proto3" json:"accessExpiresIn"`
	Refresh             string                 `protobuf:"bytes,13,opt,name=refresh,proto3" json:"refresh"`
	RefreshCreateAt     *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=refreshCreateAt,proto3" json:"refreshCreateAt"`
	RefreshExpiresIn    int64                  `protobuf:"varint,15,opt,name=refreshExpiresIn,proto3" json:"refreshExpiresIn"`
}

func (x *TokenResp) Reset() {
	*x = TokenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oauth2_oauth2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenResp) ProtoMessage() {}

func (x *TokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_oauth2_oauth2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenResp.ProtoReflect.Descriptor instead.
func (*TokenResp) Descriptor() ([]byte, []int) {
	return file_oauth2_oauth2_proto_rawDescGZIP(), []int{3}
}

func (x *TokenResp) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *TokenResp) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *TokenResp) GetRedirectURI() string {
	if x != nil {
		return x.RedirectURI
	}
	return ""
}

func (x *TokenResp) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *TokenResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TokenResp) GetCodeChallenge() string {
	if x != nil {
		return x.CodeChallenge
	}
	return ""
}

func (x *TokenResp) GetCodeChallengeMethod() string {
	if x != nil {
		return x.CodeChallengeMethod
	}
	return ""
}

func (x *TokenResp) GetCodeCreateAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CodeCreateAt
	}
	return nil
}

func (x *TokenResp) GetCodeExpiresIn() int64 {
	if x != nil {
		return x.CodeExpiresIn
	}
	return 0
}

func (x *TokenResp) GetAccess() string {
	if x != nil {
		return x.Access
	}
	return ""
}

func (x *TokenResp) GetAccessCreateAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AccessCreateAt
	}
	return nil
}

func (x *TokenResp) GetAccessExpiresIn() int64 {
	if x != nil {
		return x.AccessExpiresIn
	}
	return 0
}

func (x *TokenResp) GetRefresh() string {
	if x != nil {
		return x.Refresh
	}
	return ""
}

func (x *TokenResp) GetRefreshCreateAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RefreshCreateAt
	}
	return nil
}

func (x *TokenResp) GetRefreshExpiresIn() int64 {
	if x != nil {
		return x.RefreshExpiresIn
	}
	return 0
}

var File_oauth2_oauth2_proto protoreflect.FileDescriptor

var file_oauth2_oauth2_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61,
	0x74, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x22, 0x23, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x1e, 0x0a, 0x08, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xdb, 0x04, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x49, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x49, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x64,
	0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x6f,
	0x64, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x3e, 0x0a, 0x0c,
	0x63, 0x6f, 0x64, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c,
	0x63, 0x6f, 0x64, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x63, 0x6f, 0x64, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x49, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x42, 0x0a, 0x0e, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x28,
	0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x12, 0x44, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x49, 0x6e, 0x32, 0x9c, 0x01, 0x0a, 0x06, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x12,
	0x4e, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68,
	0x32, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x42, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x4d, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x43, 0x68,
	0x61, 0x74, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x44, 0x4b, 0x2f, 0x63, 0x68, 0x61, 0x74,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x61, 0x75, 0x74, 0x68,
	0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_oauth2_oauth2_proto_rawDescOnce sync.Once
	file_oauth2_oauth2_proto_rawDescData = file_oauth2_oauth2_proto_rawDesc
)

func file_oauth2_oauth2_proto_rawDescGZIP() []byte {
	file_oauth2_oauth2_proto_rawDescOnce.Do(func() {
		file_oauth2_oauth2_proto_rawDescData = protoimpl.X.CompressGZIP(file_oauth2_oauth2_proto_rawDescData)
	})
	return file_oauth2_oauth2_proto_rawDescData
}

var file_oauth2_oauth2_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_oauth2_oauth2_proto_goTypes = []interface{}{
	(*AuthorizeReq)(nil),          // 0: OpenIMChat.oauth.AuthorizeReq
	(*AuthorizeResp)(nil),         // 1: OpenIMChat.oauth.AuthorizeResp
	(*TokenReq)(nil),              // 2: OpenIMChat.oauth.TokenReq
	(*TokenResp)(nil),             // 3: OpenIMChat.oauth.TokenResp
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_oauth2_oauth2_proto_depIdxs = []int32{
	4, // 0: OpenIMChat.oauth.TokenResp.codeCreateAt:type_name -> google.protobuf.Timestamp
	4, // 1: OpenIMChat.oauth.TokenResp.accessCreateAt:type_name -> google.protobuf.Timestamp
	4, // 2: OpenIMChat.oauth.TokenResp.refreshCreateAt:type_name -> google.protobuf.Timestamp
	0, // 3: OpenIMChat.oauth.oauth.Authorize:input_type -> OpenIMChat.oauth.AuthorizeReq
	2, // 4: OpenIMChat.oauth.oauth.Token:input_type -> OpenIMChat.oauth.TokenReq
	1, // 5: OpenIMChat.oauth.oauth.Authorize:output_type -> OpenIMChat.oauth.AuthorizeResp
	3, // 6: OpenIMChat.oauth.oauth.Token:output_type -> OpenIMChat.oauth.TokenResp
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_oauth2_oauth2_proto_init() }
func file_oauth2_oauth2_proto_init() {
	if File_oauth2_oauth2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_oauth2_oauth2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oauth2_oauth2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oauth2_oauth2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oauth2_oauth2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oauth2_oauth2_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_oauth2_oauth2_proto_goTypes,
		DependencyIndexes: file_oauth2_oauth2_proto_depIdxs,
		MessageInfos:      file_oauth2_oauth2_proto_msgTypes,
	}.Build()
	File_oauth2_oauth2_proto = out.File
	file_oauth2_oauth2_proto_rawDesc = nil
	file_oauth2_oauth2_proto_goTypes = nil
	file_oauth2_oauth2_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// Oauth2Client is the client API for Oauth2 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Oauth2Client interface {
	// 获取code
	Authorize(ctx context.Context, in *AuthorizeReq, opts ...grpc.CallOption) (*AuthorizeResp, error)
	// 获取access_token
	Token(ctx context.Context, in *TokenReq, opts ...grpc.CallOption) (*TokenResp, error)
}

type oauth2Client struct {
	cc grpc.ClientConnInterface
}

func NewOauth2Client(cc grpc.ClientConnInterface) Oauth2Client {
	return &oauth2Client{cc}
}

func (c *oauth2Client) Authorize(ctx context.Context, in *AuthorizeReq, opts ...grpc.CallOption) (*AuthorizeResp, error) {
	out := new(AuthorizeResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.oauth.oauth/Authorize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oauth2Client) Token(ctx context.Context, in *TokenReq, opts ...grpc.CallOption) (*TokenResp, error) {
	out := new(TokenResp)
	err := c.cc.Invoke(ctx, "/OpenIMChat.oauth.oauth/Token", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Oauth2Server is the server API for Oauth2 service.
type Oauth2Server interface {
	// 获取code
	Authorize(context.Context, *AuthorizeReq) (*AuthorizeResp, error)
	// 获取access_token
	Token(context.Context, *TokenReq) (*TokenResp, error)
}

// UnimplementedOauth2Server can be embedded to have forward compatible implementations.
type UnimplementedOauth2Server struct {
}

func (*UnimplementedOauth2Server) Authorize(context.Context, *AuthorizeReq) (*AuthorizeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Authorize not implemented")
}
func (*UnimplementedOauth2Server) Token(context.Context, *TokenReq) (*TokenResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Token not implemented")
}

func RegisterOauth2Server(s *grpc.Server, srv Oauth2Server) {
	s.RegisterService(&_Oauth2_serviceDesc, srv)
}

func _Oauth2_Authorize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthorizeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Oauth2Server).Authorize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.oauth.oauth/Authorize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Oauth2Server).Authorize(ctx, req.(*AuthorizeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Oauth2_Token_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Oauth2Server).Token(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMChat.oauth.oauth/Token",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Oauth2Server).Token(ctx, req.(*TokenReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Oauth2_serviceDesc = grpc.ServiceDesc{
	ServiceName: "OpenIMChat.oauth.oauth",
	HandlerType: (*Oauth2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Authorize",
			Handler:    _Oauth2_Authorize_Handler,
		},
		{
			MethodName: "Token",
			Handler:    _Oauth2_Token_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "oauth/oauth.proto",
}
